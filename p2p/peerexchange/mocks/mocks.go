// Code generated by MockGen. DO NOT EDIT.
// Source: ./discovery_test.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	multiaddr "github.com/multiformats/go-multiaddr"
)

// MockAddrProvider is a mock of AddrProvider interface.
type MockAddrProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAddrProviderMockRecorder
}

// MockAddrProviderMockRecorder is the mock recorder for MockAddrProvider.
type MockAddrProviderMockRecorder struct {
	mock *MockAddrProvider
}

// NewMockAddrProvider creates a new mock instance.
func NewMockAddrProvider(ctrl *gomock.Controller) *MockAddrProvider {
	mock := &MockAddrProvider{ctrl: ctrl}
	mock.recorder = &MockAddrProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAddrProvider) EXPECT() *MockAddrProviderMockRecorder {
	return m.recorder
}

// Addrs mocks base method.
func (m *MockAddrProvider) Addrs() []multiaddr.Multiaddr {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Addrs")
	ret0, _ := ret[0].([]multiaddr.Multiaddr)
	return ret0
}

// Addrs indicates an expected call of Addrs.
func (mr *MockAddrProviderMockRecorder) Addrs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Addrs", reflect.TypeOf((*MockAddrProvider)(nil).Addrs))
}
