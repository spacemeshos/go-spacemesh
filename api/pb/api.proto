syntax = "proto3";
package pb;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message SimpleMessage {
    string value = 1;
}

message AccountId {
    string address =1;
}

message TransferFunds {
    AccountId sender =1;
    AccountId receiver =2;
    uint64 nonce =3;
    uint64 amount =4;
}

message SignedTransaction {
    string srcAddress   = 1;
    string dstAddress   = 2;
    string amount       = 3;
    string nonce        = 4;
}

message BroadcastMessage {
    string data = 1;
}

message CommitmentSizeMessage {
    uint64 mbCommitted = 1;
}

message LogicalDriveMessage {
    string logicalDrive = 1;
}

service SpacemeshService {
    rpc Echo(SimpleMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/example/echo"
          body: "*"
        };
    }
    rpc GetNonce(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/nonce"
          body: "*"
        };
    }
    rpc GetBalance(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/balance"
          body: "*"
        };
    }
    rpc SubmitTransaction(SignedTransaction) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/submittransaction"
          body: "*"
        };
    }
    rpc Broadcast(BroadcastMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/broadcast"
          body: "*"
        };
    }
    rpc SetCommitmentSize(CommitmentSizeMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setcommitmentsize"
          body: "*"
        };
    }
    rpc SetLogicalDrive(LogicalDriveMessage) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setlogicaldrive"
          body: "*"
        };
    }
    rpc SetAwardsAddress(AccountId) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/setawardsaddr"
          body: "*"
        };
    }
    rpc GetInitProgress(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/getprogress"
          body: "*"
        };
    }
    rpc GetTotalAwards(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/gettotalawards"
          body: "*"
        };
    }
    rpc GetUpcomingAwards(google.protobuf.Empty) returns (SimpleMessage) {
        option (google.api.http) = {
          post: "/v1/getupcomingawards"
          body: "*"
        };
    }
}

