// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.6.1
// source: api/pb/api.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TxStatus int32

const (
	TxStatus_REJECTED TxStatus = 0
	//INSUFFICIENT_FUNDS = 1;
	//CONFLICTING = 2;
	TxStatus_PENDING TxStatus = 3
	//PROCESSING = 4;
	//APPROVED = 5;
	TxStatus_CONFIRMED TxStatus = 6
)

// Enum value maps for TxStatus.
var (
	TxStatus_name = map[int32]string{
		0: "REJECTED",
		3: "PENDING",
		6: "CONFIRMED",
	}
	TxStatus_value = map[string]int32{
		"REJECTED":  0,
		"PENDING":   3,
		"CONFIRMED": 6,
	}
)

func (x TxStatus) Enum() *TxStatus {
	p := new(TxStatus)
	*p = x
	return p
}

func (x TxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_api_proto_enumTypes[0].Descriptor()
}

func (TxStatus) Type() protoreflect.EnumType {
	return &file_api_pb_api_proto_enumTypes[0]
}

func (x TxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxStatus.Descriptor instead.
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{0}
}

type SimpleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TxConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TxConfirmation) Reset() {
	*x = TxConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxConfirmation) ProtoMessage() {}

func (x *TxConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxConfirmation.ProtoReflect.Descriptor instead.
func (*TxConfirmation) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{1}
}

func (x *TxConfirmation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TxConfirmation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TransactionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TransactionId) Reset() {
	*x = TransactionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionId) ProtoMessage() {}

func (x *TransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionId.ProtoReflect.Descriptor instead.
func (*TransactionId) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId      *TransactionId `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Sender    *AccountId     `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver  *AccountId     `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount    uint64         `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee       uint64         `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Status    TxStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=pb.TxStatus" json:"status,omitempty"`
	LayerId   uint64         `protobuf:"varint,7,opt,name=layerId,proto3" json:"layerId,omitempty"`
	Timestamp uint64         `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetTxId() *TransactionId {
	if x != nil {
		return x.TxId
	}
	return nil
}

func (x *Transaction) GetSender() *AccountId {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Transaction) GetReceiver() *AccountId {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transaction) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Transaction) GetStatus() TxStatus {
	if x != nil {
		return x.Status
	}
	return TxStatus_REJECTED
}

func (x *Transaction) GetLayerId() uint64 {
	if x != nil {
		return x.LayerId
	}
	return 0
}

func (x *Transaction) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AccountId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AccountId) Reset() {
	*x = AccountId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountId) ProtoMessage() {}

func (x *AccountId) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountId.ProtoReflect.Descriptor instead.
func (*AccountId) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{4}
}

func (x *AccountId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TransferFunds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *AccountId `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver *AccountId `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Nonce    uint64     `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Amount   uint64     `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferFunds) Reset() {
	*x = TransferFunds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFunds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFunds) ProtoMessage() {}

func (x *TransferFunds) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFunds.ProtoReflect.Descriptor instead.
func (*TransferFunds) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{5}
}

func (x *TransferFunds) GetSender() *AccountId {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *TransferFunds) GetReceiver() *AccountId {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *TransferFunds) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransferFunds) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InitPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicalDrive   string `protobuf:"bytes,1,opt,name=logicalDrive,proto3" json:"logicalDrive,omitempty"`
	CommitmentSize uint64 `protobuf:"varint,2,opt,name=commitmentSize,proto3" json:"commitmentSize,omitempty"`
	Coinbase       string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
}

func (x *InitPost) Reset() {
	*x = InitPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPost) ProtoMessage() {}

func (x *InitPost) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPost.ProtoReflect.Descriptor instead.
func (*InitPost) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{6}
}

func (x *InitPost) GetLogicalDrive() string {
	if x != nil {
		return x.LogicalDrive
	}
	return ""
}

func (x *InitPost) GetCommitmentSize() uint64 {
	if x != nil {
		return x.CommitmentSize
	}
	return 0
}

func (x *InitPost) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

type SignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"` // serialized with XDR
}

func (x *SignedTransaction) Reset() {
	*x = SignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedTransaction) ProtoMessage() {}

func (x *SignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedTransaction.ProtoReflect.Descriptor instead.
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{7}
}

func (x *SignedTransaction) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

type EligibleLayers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers []uint64 `protobuf:"varint,1,rep,packed,name=layers,proto3" json:"layers,omitempty"`
}

func (x *EligibleLayers) Reset() {
	*x = EligibleLayers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EligibleLayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EligibleLayers) ProtoMessage() {}

func (x *EligibleLayers) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EligibleLayers.ProtoReflect.Descriptor instead.
func (*EligibleLayers) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{8}
}

func (x *EligibleLayers) GetLayers() []uint64 {
	if x != nil {
		return x.Layers
	}
	return nil
}

type BroadcastMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BroadcastMessage) Reset() {
	*x = BroadcastMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastMessage) ProtoMessage() {}

func (x *BroadcastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastMessage.ProtoReflect.Descriptor instead.
func (*BroadcastMessage) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{9}
}

func (x *BroadcastMessage) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type BinaryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BinaryMessage) Reset() {
	*x = BinaryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryMessage) ProtoMessage() {}

func (x *BinaryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryMessage.ProtoReflect.Descriptor instead.
func (*BinaryMessage) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{10}
}

func (x *BinaryMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommitmentSizeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MbCommitted uint64 `protobuf:"varint,1,opt,name=mbCommitted,proto3" json:"mbCommitted,omitempty"`
}

func (x *CommitmentSizeMessage) Reset() {
	*x = CommitmentSizeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSizeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSizeMessage) ProtoMessage() {}

func (x *CommitmentSizeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSizeMessage.ProtoReflect.Descriptor instead.
func (*CommitmentSizeMessage) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{11}
}

func (x *CommitmentSizeMessage) GetMbCommitted() uint64 {
	if x != nil {
		return x.MbCommitted
	}
	return 0
}

type LogicalDriveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicalDrive string `protobuf:"bytes,1,opt,name=logicalDrive,proto3" json:"logicalDrive,omitempty"`
}

func (x *LogicalDriveMessage) Reset() {
	*x = LogicalDriveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicalDriveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicalDriveMessage) ProtoMessage() {}

func (x *LogicalDriveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicalDriveMessage.ProtoReflect.Descriptor instead.
func (*LogicalDriveMessage) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{12}
}

func (x *LogicalDriveMessage) GetLogicalDrive() string {
	if x != nil {
		return x.LogicalDrive
	}
	return ""
}

type MiningStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataDir        string `protobuf:"bytes,1,opt,name=dataDir,proto3" json:"dataDir,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Coinbase       string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	RemainingBytes uint64 `protobuf:"varint,4,opt,name=remainingBytes,proto3" json:"remainingBytes,omitempty"`
}

func (x *MiningStats) Reset() {
	*x = MiningStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiningStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningStats) ProtoMessage() {}

func (x *MiningStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningStats.ProtoReflect.Descriptor instead.
func (*MiningStats) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{13}
}

func (x *MiningStats) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *MiningStats) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MiningStats) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *MiningStats) GetRemainingBytes() uint64 {
	if x != nil {
		return x.RemainingBytes
	}
	return 0
}

type SetLogLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggerName string `protobuf:"bytes,1,opt,name=loggerName,proto3" json:"loggerName,omitempty"`
	Severity   string `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
}

func (x *SetLogLevel) Reset() {
	*x = SetLogLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLogLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevel) ProtoMessage() {}

func (x *SetLogLevel) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevel.ProtoReflect.Descriptor instead.
func (*SetLogLevel) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{14}
}

func (x *SetLogLevel) GetLoggerName() string {
	if x != nil {
		return x.LoggerName
	}
	return ""
}

func (x *SetLogLevel) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

type AccountTxs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs            []string `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	ValidatedLayer uint64   `protobuf:"varint,2,opt,name=validatedLayer,proto3" json:"validatedLayer,omitempty"`
}

func (x *AccountTxs) Reset() {
	*x = AccountTxs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTxs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTxs) ProtoMessage() {}

func (x *AccountTxs) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTxs.ProtoReflect.Descriptor instead.
func (*AccountTxs) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{15}
}

func (x *AccountTxs) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *AccountTxs) GetValidatedLayer() uint64 {
	if x != nil {
		return x.ValidatedLayer
	}
	return 0
}

type GetTxsSinceLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartLayer uint64     `protobuf:"varint,1,opt,name=startLayer,proto3" json:"startLayer,omitempty"`
	Account    *AccountId `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetTxsSinceLayer) Reset() {
	*x = GetTxsSinceLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxsSinceLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxsSinceLayer) ProtoMessage() {}

func (x *GetTxsSinceLayer) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxsSinceLayer.ProtoReflect.Descriptor instead.
func (*GetTxsSinceLayer) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetTxsSinceLayer) GetStartLayer() uint64 {
	if x != nil {
		return x.StartLayer
	}
	return 0
}

func (x *GetTxsSinceLayer) GetAccount() *AccountId {
	if x != nil {
		return x.Account
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer               uint64 `protobuf:"varint,1,opt,name=layer,proto3" json:"layer,omitempty"`
	TotalReward         uint64 `protobuf:"varint,2,opt,name=totalReward,proto3" json:"totalReward,omitempty"`
	LayerRewardEstimate uint64 `protobuf:"varint,3,opt,name=layerRewardEstimate,proto3" json:"layerRewardEstimate,omitempty"` // totalReward - layerRewardEstimate = feesEstimate
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{17}
}

func (x *Reward) GetLayer() uint64 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *Reward) GetTotalReward() uint64 {
	if x != nil {
		return x.TotalReward
	}
	return 0
}

func (x *Reward) GetLayerRewardEstimate() uint64 {
	if x != nil {
		return x.LayerRewardEstimate
	}
	return 0
}

type AccountRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *AccountRewards) Reset() {
	*x = AccountRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRewards) ProtoMessage() {}

func (x *AccountRewards) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRewards.ProtoReflect.Descriptor instead.
func (*AccountRewards) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{18}
}

func (x *AccountRewards) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers         uint64 `protobuf:"varint,1,opt,name=peers,proto3" json:"peers,omitempty"`
	MinPeers      uint64 `protobuf:"varint,2,opt,name=minPeers,proto3" json:"minPeers,omitempty"`
	MaxPeers      uint64 `protobuf:"varint,3,opt,name=maxPeers,proto3" json:"maxPeers,omitempty"`
	Synced        bool   `protobuf:"varint,4,opt,name=synced,proto3" json:"synced,omitempty"`
	SyncedLayer   uint64 `protobuf:"varint,5,opt,name=syncedLayer,proto3" json:"syncedLayer,omitempty"`
	CurrentLayer  uint64 `protobuf:"varint,6,opt,name=currentLayer,proto3" json:"currentLayer,omitempty"`
	VerifiedLayer uint64 `protobuf:"varint,7,opt,name=verifiedLayer,proto3" json:"verifiedLayer,omitempty"`
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_api_pb_api_proto_rawDescGZIP(), []int{19}
}

func (x *NodeStatus) GetPeers() uint64 {
	if x != nil {
		return x.Peers
	}
	return 0
}

func (x *NodeStatus) GetMinPeers() uint64 {
	if x != nil {
		return x.MinPeers
	}
	return 0
}

func (x *NodeStatus) GetMaxPeers() uint64 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

func (x *NodeStatus) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

func (x *NodeStatus) GetSyncedLayer() uint64 {
	if x != nil {
		return x.SyncedLayer
	}
	return 0
}

func (x *NodeStatus) GetCurrentLayer() uint64 {
	if x != nil {
		return x.CurrentLayer
	}
	return 0
}

func (x *NodeStatus) GetVerifiedLayer() uint64 {
	if x != nil {
		return x.VerifiedLayer
	}
	return 0
}

var File_api_pb_api_proto protoreflect.FileDescriptor

var file_api_pb_api_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x54, 0x78, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1f, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x25, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x08, 0x49,
	0x6e, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x23, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x74, 0x78, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x26,
	0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x15, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x78, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x78, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x0e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x65, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x2a, 0x34, 0x0a, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x06, 0x32, 0xe4, 0x0b, 0x0a, 0x10, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x49, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2f, 0x65, 0x63, 0x68, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x42, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e,
	0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x46,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x4a, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x3a,
	0x01, 0x2a, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22,
	0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x4e, 0x0a, 0x09, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x53, 0x0a, 0x0d, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x70, 0x6f, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x52,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x61, 0x64, 0x64, 0x72, 0x3a,
	0x01, 0x2a, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x75, 0x70,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x50, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x3a, 0x01,
	0x2a, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x78, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x73, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x78, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x78, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x50, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x70, 0x6f, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x53, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22,
	0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x3a, 0x01,
	0x2a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pb_api_proto_rawDescOnce sync.Once
	file_api_pb_api_proto_rawDescData = file_api_pb_api_proto_rawDesc
)

func file_api_pb_api_proto_rawDescGZIP() []byte {
	file_api_pb_api_proto_rawDescOnce.Do(func() {
		file_api_pb_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pb_api_proto_rawDescData)
	})
	return file_api_pb_api_proto_rawDescData
}

var file_api_pb_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_pb_api_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_pb_api_proto_goTypes = []interface{}{
	(TxStatus)(0),                 // 0: pb.TxStatus
	(*SimpleMessage)(nil),         // 1: pb.SimpleMessage
	(*TxConfirmation)(nil),        // 2: pb.TxConfirmation
	(*TransactionId)(nil),         // 3: pb.TransactionId
	(*Transaction)(nil),           // 4: pb.Transaction
	(*AccountId)(nil),             // 5: pb.AccountId
	(*TransferFunds)(nil),         // 6: pb.TransferFunds
	(*InitPost)(nil),              // 7: pb.InitPost
	(*SignedTransaction)(nil),     // 8: pb.SignedTransaction
	(*EligibleLayers)(nil),        // 9: pb.EligibleLayers
	(*BroadcastMessage)(nil),      // 10: pb.BroadcastMessage
	(*BinaryMessage)(nil),         // 11: pb.BinaryMessage
	(*CommitmentSizeMessage)(nil), // 12: pb.CommitmentSizeMessage
	(*LogicalDriveMessage)(nil),   // 13: pb.LogicalDriveMessage
	(*MiningStats)(nil),           // 14: pb.MiningStats
	(*SetLogLevel)(nil),           // 15: pb.SetLogLevel
	(*AccountTxs)(nil),            // 16: pb.AccountTxs
	(*GetTxsSinceLayer)(nil),      // 17: pb.GetTxsSinceLayer
	(*Reward)(nil),                // 18: pb.Reward
	(*AccountRewards)(nil),        // 19: pb.AccountRewards
	(*NodeStatus)(nil),            // 20: pb.NodeStatus
	(*empty.Empty)(nil),           // 21: google.protobuf.Empty
}
var file_api_pb_api_proto_depIdxs = []int32{
	3,  // 0: pb.Transaction.txId:type_name -> pb.TransactionId
	5,  // 1: pb.Transaction.sender:type_name -> pb.AccountId
	5,  // 2: pb.Transaction.receiver:type_name -> pb.AccountId
	0,  // 3: pb.Transaction.status:type_name -> pb.TxStatus
	5,  // 4: pb.TransferFunds.sender:type_name -> pb.AccountId
	5,  // 5: pb.TransferFunds.receiver:type_name -> pb.AccountId
	5,  // 6: pb.GetTxsSinceLayer.account:type_name -> pb.AccountId
	18, // 7: pb.AccountRewards.rewards:type_name -> pb.Reward
	1,  // 8: pb.SpacemeshService.Echo:input_type -> pb.SimpleMessage
	5,  // 9: pb.SpacemeshService.GetNonce:input_type -> pb.AccountId
	5,  // 10: pb.SpacemeshService.GetBalance:input_type -> pb.AccountId
	7,  // 11: pb.SpacemeshService.StartMining:input_type -> pb.InitPost
	3,  // 12: pb.SpacemeshService.GetTransaction:input_type -> pb.TransactionId
	8,  // 13: pb.SpacemeshService.SubmitTransaction:input_type -> pb.SignedTransaction
	10, // 14: pb.SpacemeshService.Broadcast:input_type -> pb.BroadcastMessage
	11, // 15: pb.SpacemeshService.BroadcastPoet:input_type -> pb.BinaryMessage
	5,  // 16: pb.SpacemeshService.SetAwardsAddress:input_type -> pb.AccountId
	21, // 17: pb.SpacemeshService.GetMiningStats:input_type -> google.protobuf.Empty
	21, // 18: pb.SpacemeshService.GetNodeStatus:input_type -> google.protobuf.Empty
	21, // 19: pb.SpacemeshService.GetGenesisTime:input_type -> google.protobuf.Empty
	21, // 20: pb.SpacemeshService.GetUpcomingAwards:input_type -> google.protobuf.Empty
	15, // 21: pb.SpacemeshService.SetLoggerLevel:input_type -> pb.SetLogLevel
	17, // 22: pb.SpacemeshService.GetAccountTxs:input_type -> pb.GetTxsSinceLayer
	5,  // 23: pb.SpacemeshService.GetAccountRewards:input_type -> pb.AccountId
	21, // 24: pb.SpacemeshService.ResetPost:input_type -> google.protobuf.Empty
	21, // 25: pb.SpacemeshService.GetStateRoot:input_type -> google.protobuf.Empty
	1,  // 26: pb.SpacemeshService.Echo:output_type -> pb.SimpleMessage
	1,  // 27: pb.SpacemeshService.GetNonce:output_type -> pb.SimpleMessage
	1,  // 28: pb.SpacemeshService.GetBalance:output_type -> pb.SimpleMessage
	1,  // 29: pb.SpacemeshService.StartMining:output_type -> pb.SimpleMessage
	4,  // 30: pb.SpacemeshService.GetTransaction:output_type -> pb.Transaction
	2,  // 31: pb.SpacemeshService.SubmitTransaction:output_type -> pb.TxConfirmation
	1,  // 32: pb.SpacemeshService.Broadcast:output_type -> pb.SimpleMessage
	1,  // 33: pb.SpacemeshService.BroadcastPoet:output_type -> pb.SimpleMessage
	1,  // 34: pb.SpacemeshService.SetAwardsAddress:output_type -> pb.SimpleMessage
	14, // 35: pb.SpacemeshService.GetMiningStats:output_type -> pb.MiningStats
	20, // 36: pb.SpacemeshService.GetNodeStatus:output_type -> pb.NodeStatus
	1,  // 37: pb.SpacemeshService.GetGenesisTime:output_type -> pb.SimpleMessage
	9,  // 38: pb.SpacemeshService.GetUpcomingAwards:output_type -> pb.EligibleLayers
	1,  // 39: pb.SpacemeshService.SetLoggerLevel:output_type -> pb.SimpleMessage
	16, // 40: pb.SpacemeshService.GetAccountTxs:output_type -> pb.AccountTxs
	19, // 41: pb.SpacemeshService.GetAccountRewards:output_type -> pb.AccountRewards
	1,  // 42: pb.SpacemeshService.ResetPost:output_type -> pb.SimpleMessage
	1,  // 43: pb.SpacemeshService.GetStateRoot:output_type -> pb.SimpleMessage
	26, // [26:44] is the sub-list for method output_type
	8,  // [8:26] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_pb_api_proto_init() }
func file_api_pb_api_proto_init() {
	if File_api_pb_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pb_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFunds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EligibleLayers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSizeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicalDriveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiningStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLogLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTxs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxsSinceLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pb_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pb_api_proto_goTypes,
		DependencyIndexes: file_api_pb_api_proto_depIdxs,
		EnumInfos:         file_api_pb_api_proto_enumTypes,
		MessageInfos:      file_api_pb_api_proto_msgTypes,
	}.Build()
	File_api_pb_api_proto = out.File
	file_api_pb_api_proto_rawDesc = nil
	file_api_pb_api_proto_goTypes = nil
	file_api_pb_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpacemeshServiceClient is the client API for SpacemeshService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpacemeshServiceClient interface {
	Echo(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetNonce(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetBalance(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	StartMining(ctx context.Context, in *InitPost, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetTransaction(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error)
	SubmitTransaction(ctx context.Context, in *SignedTransaction, opts ...grpc.CallOption) (*TxConfirmation, error)
	Broadcast(ctx context.Context, in *BroadcastMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error)
	SetAwardsAddress(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetMiningStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MiningStats, error)
	GetNodeStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeStatus, error)
	GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetUpcomingAwards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EligibleLayers, error)
	SetLoggerLevel(ctx context.Context, in *SetLogLevel, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetAccountTxs(ctx context.Context, in *GetTxsSinceLayer, opts ...grpc.CallOption) (*AccountTxs, error)
	GetAccountRewards(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*AccountRewards, error)
	ResetPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
	GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error)
}

type spacemeshServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpacemeshServiceClient(cc grpc.ClientConnInterface) SpacemeshServiceClient {
	return &spacemeshServiceClient{cc}
}

func (c *spacemeshServiceClient) Echo(ctx context.Context, in *SimpleMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetNonce(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetNonce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetBalance(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) StartMining(ctx context.Context, in *InitPost, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/StartMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetTransaction(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SubmitTransaction(ctx context.Context, in *SignedTransaction, opts ...grpc.CallOption) (*TxConfirmation, error) {
	out := new(TxConfirmation)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) Broadcast(ctx context.Context, in *BroadcastMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/Broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) BroadcastPoet(ctx context.Context, in *BinaryMessage, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/BroadcastPoet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SetAwardsAddress(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SetAwardsAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetMiningStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MiningStats, error) {
	out := new(MiningStats)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetMiningStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetNodeStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeStatus, error) {
	out := new(NodeStatus)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetNodeStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetGenesisTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetUpcomingAwards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EligibleLayers, error) {
	out := new(EligibleLayers)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetUpcomingAwards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) SetLoggerLevel(ctx context.Context, in *SetLogLevel, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/SetLoggerLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetAccountTxs(ctx context.Context, in *GetTxsSinceLayer, opts ...grpc.CallOption) (*AccountTxs, error) {
	out := new(AccountTxs)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetAccountTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetAccountRewards(ctx context.Context, in *AccountId, opts ...grpc.CallOption) (*AccountRewards, error) {
	out := new(AccountRewards)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetAccountRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) ResetPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/ResetPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacemeshServiceClient) GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SimpleMessage, error) {
	out := new(SimpleMessage)
	err := c.cc.Invoke(ctx, "/pb.SpacemeshService/GetStateRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpacemeshServiceServer is the server API for SpacemeshService service.
type SpacemeshServiceServer interface {
	Echo(context.Context, *SimpleMessage) (*SimpleMessage, error)
	GetNonce(context.Context, *AccountId) (*SimpleMessage, error)
	GetBalance(context.Context, *AccountId) (*SimpleMessage, error)
	StartMining(context.Context, *InitPost) (*SimpleMessage, error)
	GetTransaction(context.Context, *TransactionId) (*Transaction, error)
	SubmitTransaction(context.Context, *SignedTransaction) (*TxConfirmation, error)
	Broadcast(context.Context, *BroadcastMessage) (*SimpleMessage, error)
	BroadcastPoet(context.Context, *BinaryMessage) (*SimpleMessage, error)
	SetAwardsAddress(context.Context, *AccountId) (*SimpleMessage, error)
	GetMiningStats(context.Context, *empty.Empty) (*MiningStats, error)
	GetNodeStatus(context.Context, *empty.Empty) (*NodeStatus, error)
	GetGenesisTime(context.Context, *empty.Empty) (*SimpleMessage, error)
	GetUpcomingAwards(context.Context, *empty.Empty) (*EligibleLayers, error)
	SetLoggerLevel(context.Context, *SetLogLevel) (*SimpleMessage, error)
	GetAccountTxs(context.Context, *GetTxsSinceLayer) (*AccountTxs, error)
	GetAccountRewards(context.Context, *AccountId) (*AccountRewards, error)
	ResetPost(context.Context, *empty.Empty) (*SimpleMessage, error)
	GetStateRoot(context.Context, *empty.Empty) (*SimpleMessage, error)
}

// UnimplementedSpacemeshServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpacemeshServiceServer struct {
}

func (*UnimplementedSpacemeshServiceServer) Echo(context.Context, *SimpleMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetNonce(context.Context, *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNonce not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetBalance(context.Context, *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedSpacemeshServiceServer) StartMining(context.Context, *InitPost) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartMining not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetTransaction(context.Context, *TransactionId) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SubmitTransaction(context.Context, *SignedTransaction) (*TxConfirmation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedSpacemeshServiceServer) Broadcast(context.Context, *BroadcastMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}
func (*UnimplementedSpacemeshServiceServer) BroadcastPoet(context.Context, *BinaryMessage) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastPoet not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SetAwardsAddress(context.Context, *AccountId) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAwardsAddress not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetMiningStats(context.Context, *empty.Empty) (*MiningStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMiningStats not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetNodeStatus(context.Context, *empty.Empty) (*NodeStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeStatus not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetGenesisTime(context.Context, *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenesisTime not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetUpcomingAwards(context.Context, *empty.Empty) (*EligibleLayers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpcomingAwards not implemented")
}
func (*UnimplementedSpacemeshServiceServer) SetLoggerLevel(context.Context, *SetLogLevel) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLoggerLevel not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetAccountTxs(context.Context, *GetTxsSinceLayer) (*AccountTxs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountTxs not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetAccountRewards(context.Context, *AccountId) (*AccountRewards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountRewards not implemented")
}
func (*UnimplementedSpacemeshServiceServer) ResetPost(context.Context, *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPost not implemented")
}
func (*UnimplementedSpacemeshServiceServer) GetStateRoot(context.Context, *empty.Empty) (*SimpleMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStateRoot not implemented")
}

func RegisterSpacemeshServiceServer(s *grpc.Server, srv SpacemeshServiceServer) {
	s.RegisterService(&_SpacemeshService_serviceDesc, srv)
}

func _SpacemeshService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).Echo(ctx, req.(*SimpleMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetNonce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetNonce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetNonce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetNonce(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetBalance(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_StartMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitPost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).StartMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/StartMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).StartMining(ctx, req.(*InitPost))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetTransaction(ctx, req.(*TransactionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignedTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SubmitTransaction(ctx, req.(*SignedTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).Broadcast(ctx, req.(*BroadcastMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_BroadcastPoet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/BroadcastPoet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).BroadcastPoet(ctx, req.(*BinaryMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SetAwardsAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SetAwardsAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SetAwardsAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SetAwardsAddress(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetMiningStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetMiningStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetMiningStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetMiningStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetNodeStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetNodeStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetNodeStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetNodeStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetGenesisTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetGenesisTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetGenesisTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetGenesisTime(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetUpcomingAwards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetUpcomingAwards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetUpcomingAwards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetUpcomingAwards(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_SetLoggerLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetLogLevel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).SetLoggerLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/SetLoggerLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).SetLoggerLevel(ctx, req.(*SetLogLevel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetAccountTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxsSinceLayer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetAccountTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetAccountTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetAccountTxs(ctx, req.(*GetTxsSinceLayer))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetAccountRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetAccountRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetAccountRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetAccountRewards(ctx, req.(*AccountId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_ResetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).ResetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/ResetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).ResetPost(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpacemeshService_GetStateRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacemeshServiceServer).GetStateRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SpacemeshService/GetStateRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacemeshServiceServer).GetStateRoot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpacemeshService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SpacemeshService",
	HandlerType: (*SpacemeshServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _SpacemeshService_Echo_Handler,
		},
		{
			MethodName: "GetNonce",
			Handler:    _SpacemeshService_GetNonce_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _SpacemeshService_GetBalance_Handler,
		},
		{
			MethodName: "StartMining",
			Handler:    _SpacemeshService_StartMining_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _SpacemeshService_GetTransaction_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _SpacemeshService_SubmitTransaction_Handler,
		},
		{
			MethodName: "Broadcast",
			Handler:    _SpacemeshService_Broadcast_Handler,
		},
		{
			MethodName: "BroadcastPoet",
			Handler:    _SpacemeshService_BroadcastPoet_Handler,
		},
		{
			MethodName: "SetAwardsAddress",
			Handler:    _SpacemeshService_SetAwardsAddress_Handler,
		},
		{
			MethodName: "GetMiningStats",
			Handler:    _SpacemeshService_GetMiningStats_Handler,
		},
		{
			MethodName: "GetNodeStatus",
			Handler:    _SpacemeshService_GetNodeStatus_Handler,
		},
		{
			MethodName: "GetGenesisTime",
			Handler:    _SpacemeshService_GetGenesisTime_Handler,
		},
		{
			MethodName: "GetUpcomingAwards",
			Handler:    _SpacemeshService_GetUpcomingAwards_Handler,
		},
		{
			MethodName: "SetLoggerLevel",
			Handler:    _SpacemeshService_SetLoggerLevel_Handler,
		},
		{
			MethodName: "GetAccountTxs",
			Handler:    _SpacemeshService_GetAccountTxs_Handler,
		},
		{
			MethodName: "GetAccountRewards",
			Handler:    _SpacemeshService_GetAccountRewards_Handler,
		},
		{
			MethodName: "ResetPost",
			Handler:    _SpacemeshService_ResetPost_Handler,
		},
		{
			MethodName: "GetStateRoot",
			Handler:    _SpacemeshService_GetStateRoot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/pb/api.proto",
}
