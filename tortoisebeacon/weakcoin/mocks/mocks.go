// Code generated by MockGen. DO NOT EDIT.
// Source: ./weak_coin.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockbroadcaster is a mock of broadcaster interface.
type Mockbroadcaster struct {
	ctrl     *gomock.Controller
	recorder *MockbroadcasterMockRecorder
}

// MockbroadcasterMockRecorder is the mock recorder for Mockbroadcaster.
type MockbroadcasterMockRecorder struct {
	mock *Mockbroadcaster
}

// NewMockbroadcaster creates a new mock instance.
func NewMockbroadcaster(ctrl *gomock.Controller) *Mockbroadcaster {
	mock := &Mockbroadcaster{ctrl: ctrl}
	mock.recorder = &MockbroadcasterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockbroadcaster) EXPECT() *MockbroadcasterMockRecorder {
	return m.recorder
}

// Broadcast mocks base method.
func (m *Mockbroadcaster) Broadcast(ctx context.Context, channel string, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Broadcast", ctx, channel, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Broadcast indicates an expected call of Broadcast.
func (mr *MockbroadcasterMockRecorder) Broadcast(ctx, channel, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Broadcast", reflect.TypeOf((*Mockbroadcaster)(nil).Broadcast), ctx, channel, data)
}
