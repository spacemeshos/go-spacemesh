// Code generated by mockery v1.0.0. DO NOT EDIT.

package tortoisebeacon

import (
	time "time"

	mock "github.com/stretchr/testify/mock"

	types "github.com/spacemeshos/go-spacemesh/common/types"
)

// mockActivationDB is an autogenerated mock type for the activationDB type
type mockActivationDB struct {
	mock.Mock
}

// GetAtxHeader provides a mock function with given fields: id
func (_m *mockActivationDB) GetAtxHeader(id types.ATXID) (*types.ActivationTxHeader, error) {
	ret := _m.Called(id)

	var r0 *types.ActivationTxHeader
	if rf, ok := ret.Get(0).(func(types.ATXID) *types.ActivationTxHeader); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.ActivationTxHeader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(types.ATXID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAtxTimestamp provides a mock function with given fields: id
func (_m *mockActivationDB) GetAtxTimestamp(id types.ATXID) (time.Time, error) {
	ret := _m.Called(id)

	var r0 time.Time
	if rf, ok := ret.Get(0).(func(types.ATXID) time.Time); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(types.ATXID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEpochWeight provides a mock function with given fields: epochID
func (_m *mockActivationDB) GetEpochWeight(epochID types.EpochID) (uint64, []types.ATXID, error) {
	ret := _m.Called(epochID)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(types.EpochID) uint64); ok {
		r0 = rf(epochID)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 []types.ATXID
	if rf, ok := ret.Get(1).(func(types.EpochID) []types.ATXID); ok {
		r1 = rf(epochID)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]types.ATXID)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(types.EpochID) error); ok {
		r2 = rf(epochID)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetNodeAtxIDForEpoch provides a mock function with given fields: nodeID, targetEpoch
func (_m *mockActivationDB) GetNodeAtxIDForEpoch(nodePK string, targetEpoch types.EpochID) (types.ATXID, error) {
	ret := _m.Called(nodePK, targetEpoch)

	var r0 types.ATXID
	if rf, ok := ret.Get(0).(func(string, types.EpochID) types.ATXID); ok {
		r0 = rf(nodePK, targetEpoch)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.ATXID)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, types.EpochID) error); ok {
		r1 = rf(nodePK, targetEpoch)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
