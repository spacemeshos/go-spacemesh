// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package weakcoin is a generated GoMock package.
package weakcoin

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	signing "github.com/spacemeshos/go-spacemesh/signing"
)

// MockvrfSigner is a mock of vrfSigner interface.
type MockvrfSigner struct {
	ctrl     *gomock.Controller
	recorder *MockvrfSignerMockRecorder
}

// MockvrfSignerMockRecorder is the mock recorder for MockvrfSigner.
type MockvrfSignerMockRecorder struct {
	mock *MockvrfSigner
}

// NewMockvrfSigner creates a new mock instance.
func NewMockvrfSigner(ctrl *gomock.Controller) *MockvrfSigner {
	mock := &MockvrfSigner{ctrl: ctrl}
	mock.recorder = &MockvrfSignerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvrfSigner) EXPECT() *MockvrfSignerMockRecorder {
	return m.recorder
}

// LittleEndian mocks base method.
func (m *MockvrfSigner) LittleEndian() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LittleEndian")
	ret0, _ := ret[0].(bool)
	return ret0
}

// LittleEndian indicates an expected call of LittleEndian.
func (mr *MockvrfSignerMockRecorder) LittleEndian() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LittleEndian", reflect.TypeOf((*MockvrfSigner)(nil).LittleEndian))
}

// PublicKey mocks base method.
func (m *MockvrfSigner) PublicKey() *signing.PublicKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublicKey")
	ret0, _ := ret[0].(*signing.PublicKey)
	return ret0
}

// PublicKey indicates an expected call of PublicKey.
func (mr *MockvrfSignerMockRecorder) PublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublicKey", reflect.TypeOf((*MockvrfSigner)(nil).PublicKey))
}

// Sign mocks base method.
func (m *MockvrfSigner) Sign(msg []byte) []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sign", msg)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Sign indicates an expected call of Sign.
func (mr *MockvrfSignerMockRecorder) Sign(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sign", reflect.TypeOf((*MockvrfSigner)(nil).Sign), msg)
}
