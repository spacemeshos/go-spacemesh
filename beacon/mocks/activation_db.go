// Code generated by MockGen. DO NOT EDIT.
// Source: ./activation_db.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	types "github.com/spacemeshos/go-spacemesh/common/types"
)

// MockactivationDB is a mock of activationDB interface.
type MockactivationDB struct {
	ctrl     *gomock.Controller
	recorder *MockactivationDBMockRecorder
}

// MockactivationDBMockRecorder is the mock recorder for MockactivationDB.
type MockactivationDBMockRecorder struct {
	mock *MockactivationDB
}

// NewMockactivationDB creates a new mock instance.
func NewMockactivationDB(ctrl *gomock.Controller) *MockactivationDB {
	mock := &MockactivationDB{ctrl: ctrl}
	mock.recorder = &MockactivationDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockactivationDB) EXPECT() *MockactivationDBMockRecorder {
	return m.recorder
}

// GetAtxHeader mocks base method.
func (m *MockactivationDB) GetAtxHeader(id types.ATXID) (*types.ActivationTxHeader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAtxHeader", id)
	ret0, _ := ret[0].(*types.ActivationTxHeader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAtxHeader indicates an expected call of GetAtxHeader.
func (mr *MockactivationDBMockRecorder) GetAtxHeader(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAtxHeader", reflect.TypeOf((*MockactivationDB)(nil).GetAtxHeader), id)
}

// GetAtxTimestamp mocks base method.
func (m *MockactivationDB) GetAtxTimestamp(id types.ATXID) (time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAtxTimestamp", id)
	ret0, _ := ret[0].(time.Time)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAtxTimestamp indicates an expected call of GetAtxTimestamp.
func (mr *MockactivationDBMockRecorder) GetAtxTimestamp(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAtxTimestamp", reflect.TypeOf((*MockactivationDB)(nil).GetAtxTimestamp), id)
}

// GetEpochWeight mocks base method.
func (m *MockactivationDB) GetEpochWeight(epochID types.EpochID) (uint64, []types.ATXID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochWeight", epochID)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].([]types.ATXID)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEpochWeight indicates an expected call of GetEpochWeight.
func (mr *MockactivationDBMockRecorder) GetEpochWeight(epochID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochWeight", reflect.TypeOf((*MockactivationDB)(nil).GetEpochWeight), epochID)
}

// GetNodeAtxIDForEpoch mocks base method.
func (m *MockactivationDB) GetNodeAtxIDForEpoch(nodeID types.NodeID, targetEpoch types.EpochID) (types.ATXID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeAtxIDForEpoch", nodeID, targetEpoch)
	ret0, _ := ret[0].(types.ATXID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeAtxIDForEpoch indicates an expected call of GetNodeAtxIDForEpoch.
func (mr *MockactivationDBMockRecorder) GetNodeAtxIDForEpoch(nodeID, targetEpoch interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeAtxIDForEpoch", reflect.TypeOf((*MockactivationDB)(nil).GetNodeAtxIDForEpoch), nodeID, targetEpoch)
}
