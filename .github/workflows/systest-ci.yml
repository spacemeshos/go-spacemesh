name: New CI

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

on:  
 push:
    branches:
      - staging
      - trying
jobs:
  systest:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@master

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        # GCP_CREDENTIALS is minified JSON of service account
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Configure gcloud
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: Configure kubectl
      run: gcloud container clusters get-credentials ${{ secrets.CI_CLUSTER_NAME }} --zone ${{ secrets.CI_ZONE_NAME }} --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push go-spacemesh build to dockerhub
      run: make dockerpush

    - name: Get branch and commit hash
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=branch_name::$(git rev-parse --abbrev-ref HEAD)"
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Prepare go-sm docker build for tests
      run: docker tag go-spacemesh-dev:${{ steps.vars.outputs.branch_name }} spacemeshos/go-spacemesh-dev:${{ steps.vars.outputs.sha_short }} && docker push spacemeshos/go-spacemesh-dev:${{ steps.vars.outputs.sha_short }}
  
    - name: Build tests docker image
      run: cd systest && make docker

    - name: Push tests docker images
      run: cd systest && make push

    - name: Run tests
      run: cd systest && make run test_name=. size=50 bootstrap=10m level=info clusters=2 node_selector=cloud.google.com/gke-nodepool=gha

    - name: Systemtest result
      run: kubectl logs systest-${{ steps.vars.outputs.sha_short }}
    
    - name: Delete pod
      run: kubectl delete pod systest-${{ steps.vars.outputs.sha_short }}