name: Build and Release
run-name: Release ${{ github.ref_name }}
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

on:
  push:
    tags:
      - '*'

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            outname_sufix: "linux-amd64"
          - os: [self-hosted, linux, arm64]
            outname_sufix: "linux-arm64"
          - os: macos-latest
            outname_sufix: "mac-amd64"
          - os: [self-hosted, macos, arm64]
            outname_sufix: "mac-arm64"
          - os: windows-latest
            outname_sufix: "win-amd64"
    steps:
      - shell: bash
        run: echo "OUTNAME=go-spacemesh-${{ github.ref_name }}-${{ matrix.outname_sufix }}" >> $GITHUB_ENV
      
      - name: Install dependencies in windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install make wget zip
      - name: Add OpenCL support - Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update -q && sudo apt-get install -qy ocl-icd-opencl-dev libpocl2
      - name: Override SDKROOT for macOS
        if: ${{ contains(matrix.os, 'macos') && runner.arch == 'arm64' }}
        run: echo "SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX12.3.sdk" >> $GITHUB_ENV
      - name: disable Windows Defender - Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-MpPreference -DisableRealtimeMonitoring $true

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version-file: "go.mod"
          cache: ${{ runner.arch != 'arm64' }}
      - name: Build go-spacemesh
        shell: bash
        run: |
          make install
          make build VERSION=${{ github.ref_name }} BIN_DIR_WIN=./build

      - name: Create release archive
        shell: bash
        env:
          OUTNAME: ${{ env.OUTNAME }}
        run: |
          mkdir $OUTNAME
          mv ./build/* $OUTNAME
          rm -f $OUTNAME/post.h
          zip -r $OUTNAME.zip $OUTNAME
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: "450.0.0"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Upload zip
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ${{ env.OUTNAME }}.zip
          destination: ${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/

  release:
    runs-on: ubuntu-latest
    needs: build-and-upload
    
    steps:
      - name: Generate the files names
        shell: bash
        run: |
          echo "OUTNAME_WIN_AMD64=go-spacemesh-${{ github.ref_name }}-win-amd64" >> $GITHUB_ENV
          echo "OUTNAME_LINUX_AMD64=go-spacemesh-${{ github.ref_name }}-linux-amd64" >> $GITHUB_ENV
          echo "OUTNAME_LINUX_ARM64=go-spacemesh-${{ github.ref_name }}-linux-arm64" >> $GITHUB_ENV
          echo "OUTNAME_MAC_AMD64=go-spacemesh-${{ github.ref_name }}-mac-amd64" >> $GITHUB_ENV
          echo "OUTNAME_MAC_ARM64=go-spacemesh-${{ github.ref_name }}-mac-arm64" >> $GITHUB_ENV

      - name: Calculate hashsums of release files
        shell: bash
        run: |
          wget https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_WIN_AMD64 }}.zip
          wget https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_LINUX_AMD64 }}.zip
          wget https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_LINUX_ARM64 }}.zip
          wget https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_MAC_AMD64 }}.zip
          wget https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_MAC_ARM64 }}.zip
          
          echo "SHA256_WIN_AMD64=$(sha256sum ${{ env.OUTNAME_WIN_AMD64 }}.zip)" >> $GITHUB_ENV
          echo "SHA256_LINUX_AMD64=$(sha256sum ${{ env.OUTNAME_LINUX_AMD64 }}.zip)" >> $GITHUB_ENV
          echo "SHA256_LINUX_ARM64=$(sha256sum ${{ env.OUTNAME_LINUX_ARM64 }}.zip)" >> $GITHUB_ENV
          echo "SHA256_MAC_AMD64=$(sha256sum ${{ env.OUTNAME_MAC_AMD64 }}.zip)" >> $GITHUB_ENV
          echo "SHA256_MAC_ARM64=$(sha256sum ${{ env.OUTNAME_MAC_ARM64 }}.zip)" >> $GITHUB_ENV

      - name: Generate the sha356sums yaml
        shell: bash
        run: |
          echo "win-amd64: ${{ env.SHA256_WIN_AMD64 }}" >> sha256sum.yaml
          echo "linux-amd64: ${{ env.SHA256_LINUX_AMD64 }}" >> sha256sum.yaml
          echo "linux-arm64: ${{ env.SHA256_LINUX_ARM64 }}" >> sha256sum.yaml
          echo "mac-amd64: ${{ env.SHA256_MAC_AMD64 }}" >> sha256sum.yaml
          echo "mac-arm64: ${{ env.SHA256_MAC_ARM64 }}" >> sha256sum.yaml


      - name: Upload sha256sums
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: sha256sum.yaml
          destination: ${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ github.ref_name }}
          body: |
            ## Zip Files
            - Windows amd64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_WIN_AMD64 }}.zip
            - macOS amd64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_MAC_AMD64 }}.zip
            - macOS arm64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_MAC_ARM64 }}.zip
            - Linux amd64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_LINUX_AMD64 }}.zip
            - Linux arm64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/${{ env.OUTNAME_LINUX_ARM64 }}.zip

            ## checksum - Zip files
            YAML with all the checksums of this version :  https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/sha256sum.yaml
            - Windows amd64 - sha256 : ${{ env.SHA256_WIN_AMD64 }}
            - Linux amd64 - sha256: ${{ env.SHA256_LINUX_AMD64 }}
            - Linux arm64 - sha256: ${{ env.SHA256_LINUX_ARM64 }}
            - macOS amd64 - sha256: ${{ env.SHA256_MAC_AMD64 }}
            - macOS arm64 - sha256: ${{ env.SHA256_MAC_ARM64 }}

            For information about changes in this release see the [changelog](https://github.com/spacemeshos/go-spacemesh/blob/${{ github.ref_name }}/CHANGELOG.md).
          generate_release_notes: true
          draft: false
          prerelease: true
