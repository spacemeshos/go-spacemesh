name: Build and Release

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
on:
  push:
    branches-ignore:
      - 'master'
    tags-ignore:
      - v0.*

jobs:
  # build-and-upload:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [macos-latest, ubuntu-latest, windows-latest]
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v2

  #     - name: Setup Go
  #       uses: actions/setup-go@v1
  #       with:
  #         go-version: '1.14.13' 
      
  #     - if: matrix.os == 'windows-latest'
  #       name: Install make in windows
  #       uses: crazy-max/ghaction-chocolatey@v1
  #       with:
  #         args: install make
      
  #     - name: Setup Go environment
  #       run: make install
      
  #     - name: Read version.txt
  #       id: version
  #       uses: juliangruber/read-file-action@v1
  #       with:
  #         path: ./version.txt
      
  #     - name: Build go-spacemesh
  #       run: make build GO_SPACEMESH_VERSION=${{ steps.version.outputs.content }} WINDOWS_BUILD_DIR=./build

  #     - name: Set up Cloud SDK
  #       uses: google-github-actions/setup-gcloud@master
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true

  #     - if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
  #       name: Upload macos and ubuntu build
  #       uses: google-github-actions/upload-cloud-storage@main
  #       with:
  #         path: ./build/go-spacemesh
  #         destination: ${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/${{ matrix.os }}
      
  #     - if: matrix.os == 'windows-latest'
  #       name: Upload windows build
  #       uses: google-github-actions/upload-cloud-storage@main
  #       with:
  #         path: ./build/go-spacemesh.exe
  #         destination: ${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/${{ matrix.os }}

  docker-push:
    runs-on: ubuntu-latest
    # needs: build-and-upload
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Read version.txt
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt
      - name: push to dockerhub
        run: make dockerpush GO_SPACEMESH_VERSION=${{ steps.version.outputs.content }}

  # release:
  #   runs-on: ubuntu-latest
  #   needs: docker-push
  #   steps:
  #     - name: Create Release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ steps.version.outputs.content }}
  #         body: |
  #           ## Compiled Binaries
  #           - Windows: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/windows-latest/go-spacemesh.exe
  #           - Linux: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/ubuntu-latest/go-spacemesh
  #           - Mac: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/macos-latest/go-spacemesh
  #         draft: true
  #         prerelease: true