name: Build and Release
run-name: Release ${{ github.ref_name }}
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

on:
  push:
    tags:
      - '*'

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: [self-hosted, linux, arm64]
          - os: macos-latest
          - os: [self-hosted, macos, arm64]
          - os: windows-latest
    steps:
      - shell: bash
        run: |
          if [[ ${{ runner.arch }} == "ARM64" ]]; then
            echo "OUTNAME=${{ runner.os }}_${{ runner.arch }}" >> $GITHUB_ENV
          else
            echo "OUTNAME=${{ runner.os }}" >> $GITHUB_ENV
          fi
      
      - name: Install dependencies in windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install make wget zip
      - name: Add OpenCL support - Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update -q && sudo apt-get install -qy ocl-icd-opencl-dev libpocl2
      - name: disable Windows Defender - Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          Set-MpPreference -DisableRealtimeMonitoring $true

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version-file: "go.mod"
          cache: ${{ runner.arch != 'arm64' }}
      - name: Build go-spacemesh
        shell: bash
        run: |
          make install
          make build VERSION=${{ github.ref_name }} BIN_DIR_WIN=./build

      - name: Create release archive
        shell: bash
        env:
          OUTNAME: ${{ env.OUTNAME }}
        run: |
          mkdir $OUTNAME
          mv ./build/* $OUTNAME
          rm -f $OUTNAME/post.h
          zip -r $OUTNAME.zip $OUTNAME

      - name: 'Setup GCP Auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Upload zip
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ${{ env.OUTNAME }}.zip
          destination: ${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/

  release:
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ github.ref_name }}
          body: |
            ## Zip Files
            - Windows: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/Windows.zip
            - macOS: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/macOS.zip
            - macOS arm64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/macOS_ARM64.zip
            - Linux: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/Linux.zip
            - Linux arm64: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ github.ref_name }}/Linux_ARM64.zip

            For information about changes in this release see the [changelog](https://github.com/spacemeshos/go-spacemesh/blob/${{ github.ref_name }}/CHANGELOG.md).
          draft: false
          prerelease: true
