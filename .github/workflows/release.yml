name: Build and Release

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
on:  
  push:
    tags:
      - '*'

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      
      - if: matrix.os == 'windows-latest'
        name: Install dependencies in windows
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install make wget zip

      - name: setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Read version.txt
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt

      # `make build` reads version from version.txt but in Windows it doesn't work therefore passing version explicitly
      - name: Build go-spacemesh
        shell: bash
        run: |
          make install
          make build VERSION=${{ steps.version.outputs.content }} BIN_DIR_WIN=./build
      - name: Get gpu-post release
        shell: bash
        run: |
          mkdir build_${{ runner.os }}
          unzip libgpu-setup-*.zip -d build_${{ runner.os }}

          #Download latest smrepl release
          wget https://github.com/spacemeshos/smrepl/releases/download/v0.1.32/${{ runner.os }}.zip
          unzip ${{ runner.os }}.zip -d build_${{ runner.os }}
          
          rm -f build_${{ runner.os }}/api.h
          rm -f ${{ runner.os }}.zip
          mv build_${{ runner.os }} ${{ runner.os }}

          mv ./build/* ${{ runner.os }}

          zip -r ${{ runner.os }}.zip ${{ runner.os }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Upload zip
        uses: google-github-actions/upload-cloud-storage@v0
        with:
          path: ${{ runner.os }}.zip
          destination: ${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/
  
  release:
    runs-on: ubuntu-latest
    needs: build-and-upload
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Read version.txt
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt
      
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.content }}
          body: |
            ## Zip Files
            - Windows: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/Windows.zip
            - macOS: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/macOS.zip
            - Linux: https://storage.googleapis.com/${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/Linux.zip
          draft: false
          prerelease: true
